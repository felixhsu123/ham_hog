%% 2015/06/09 实际进行行人检查编程
close all;
clear all;
%% 测试案例一
% 对一张简单的行人图进行测试，实现HOG的方法，最终获得一个行人的特征向量
% 图像计算常量
const 

% 一、读取一张行人图片
A = imread('image/first2.jpg');
figure,imshow(A);
% 二、灰度化图片
B = rgb2gray(A);
[m,n] = size(B);
figure,imshow(B);
% 三、Gamma校正进行归一化（目的是调节图像的对比度，降低图像局部的阴影和光照变化所造成的影响，同时可以抑制噪音的干扰）
C = double(B);
D = C./255.00;
E = imadjust(D, [0, 1.0], [0, 1.0], 0.5);
figure,imshow(E);
% E = imadjust(D, [0, 1.0], [0, 1.0], 1.4);
% figure,imshow(E);
% 四、计算每个像素的梯度（主要是为了捕获轮廓信息，同时进一步弱化光照的干扰）
%% 使用Sobel找像素梯度
[F,G] = ham_sobel(C);
%H = (atan(G).*180/pi);
H = atan(G.*2.8648).*180/pi;
figure,imshow(F,[]);
figure,imshow(H,[]);
%% 此处使用[-1 0 1]一维中心对称算法
% Heading = zeros(m,n);
% Value = zeros(m,n);
% for i = 1:1:m
%     for j = 1:n
%         if j == 1
%             if (E(i, j) > E(i, j+1))
%                 Heading(i,j) = 0;
%             else
%                 Heading(i,j) = 1;
%             end
%             Value(i,j) = abs(E(i,j)-E(i,j+1));
%             %Value(i,j) = (E(i,j)-E(i,j+1))^2;
%         elseif j==n
%             if (E(i,j) >E(i,j-1))
%                 Heading(i,j) = 1;
%             else
%                 Heading(i,j) = 0;
%             end
%             Value(i,j) = abs(E(i,j)-E(i,j-1)); 
%             %Value(i,j) = (E(i,j)-E(i,j-1))^2; 
%         else
%             if (E(i,j) -E(i,j-1))^2>(E(i, j) - E(i, j+1))^2
%                 Heading(i,j) = 1;
%             else
%                 Heading(i,j) = 0;
%             end
%             %Value(i,j) = (E(i,j) -E(i,j-1))^2+(E(i, j) - E(i, j+1))^2;
%             Value(i,j) = abs(E(i,j) -E(i,j-1))+abs(E(i, j) - E(i, j+1));
%         end
%     end
% end
% 
% figure,imshow(Heading, []);
% figure,imshow(Value, []);
% %% 此处使用[  -1 
%               0 
%               1]一维中心对称算法
% Heading1 = zeros(m,n);
% Value1 = zeros(m,n);
% for i = 1:1:m
%     for j = 1:n
%         if i == 1
%             if (E(i, j) > E(i+1, j))
%                 Heading1(i,j) = 0;
%             else
%                 Heading1(i,j) = 1;
%             end
%             Value1(i,j) = abs(E(i,j)-E(i+1,j));
%         elseif i==m
%             if (E(i,j) >E(i-1,j))
%                 Heading1(i,j) = 1;
%             else
%                 Heading1(i,j) = 0;
%             end
%             Value1(i,j) = abs(E(i,j)-E(i-1,j)); 
%         else
%             if (E(i,j) -E(i-1,j))^2>(E(i, j) - E(i+1, j))^2
%                 Heading1(i,j) = 1;
%             else
%                 Heading1(i,j) = 0;
%             end
%             %Value(i,j) = (E(i,j) -E(i,j-1))^2+(E(i, j) - E(i, j+1))^2;
%             Value1(i,j) = abs(E(i,j) -E(i-1,j))+abs(E(i, j) - E(i+1, j));
%         end
%     end
% end
% figure,imshow(Heading1, []);
% figure,imshow(Value1, []);
% figure,imshow(Heading+Heading1, []);
% figure,imshow(Value1+Value, []);

% 五、将图像划分为小cells（8x8）
% 直方图的空间域分为9个：既180/9 = 20
constcell_row = 8;
constcell_col = 8;
cell_row = m/constcell_row;
cell_col = n/constcell_col;
cell_descriptor = zeros(cell_row, cell_col,9);
for i = 1:cell_row
    for j=1:cell_col
        cell_descriptor(i,j,:) = ham_hist(H, (i-1)*constcell_row,(j-1)*constcell_col, constcell_row, constcell_col);
    end
end
% 六、将图像的Block进行统计
constblock_row = 2; 
constblock_col = 2;
block_row = round(m/constblock_row);
block_col = round(n/constblock_col);

for i = 1:block_row
    for j = 1:block_col
        
    end
end



